# Example file showing a basic pygame "game loop"
import pygame
import os.path
from sys import exit
from pygame.sprite import Group
from random import randint,choice

scriptDir = os.path.dirname(os.path.abspath(__file__))

# class tower(pygame.sprite.Sprite):
#     def __init__(self):
        # super().__init__()
    # tower0Surface = pygame.image.load(os.path.join(scriptDir,"graphics/Tower","sprite_Tower0.png")).convert_alpha()
    # tower0Surface = pygame.transform.scale_by(tower0Surface,.7)
    # tower2Surface = pygame.image.load(os.path.join(scriptDir,"graphics/Tower","sprite_Tower2.png")).convert_alpha()
    # tower2Surface = pygame.transform.scale_by(tower0Surface,.7)
    # tower3Surface = pygame.image.load(os.path.join(scriptDir,"graphics/Tower","sprite_Tower3.png")).convert_alpha()
    # tower3Surface = pygame.transform.scale_by(tower0Surface,.7)
    # 
    # self.towerBreak = [tower0Surface,tower2Surface,tower3Surface]


#class hold all enemies for the game
class dragon(pygame.sprite.Sprite):
    def __init__(self,type):
        super().__init__()
        if type == "land Dragon":
            dragonWalk1= pygame.image.load(os.path.join(scriptDir,"graphics/Land Dragon","sprite_LandDragon0"))
            dragonWalk2= pygame.image.load(os.path.join(scriptDir,"graphics/Land Dragon","sprite_LandDragon1"))
            dragonWalk3= pygame.image.load(os.path.join(scriptDir,"graphics/Land Dragon","sprite_LandDragon2"))
            self.frame = [dragonWalk1,dragonWalk2,dragonWalk3]
            yPos = 475
        else:
            dragonFly1= pygame.image.load(os.path.join(scriptDir,"graphics/Land Dragon","sprite_SkyDragon0"))
            dragonFly2= pygame.image.load(os.path.join(scriptDir,"graphics/Land Dragon","sprite_SkyDragon1"))
            self.frame = [dragonFly1,dragonFly2]
            yPos = 260
        self.dragonIndex = 0
    def animationState(self):
        self.obstacleIndex+= 0.1
        if self.obstacleIndex >= len(self.frame):
            self.obstacleIndex = 0
        self.image = self.frame[int(self.obstacleIndex)]
        self.image = self.frame[self.obstacleIndex]
        self.rect = self.image.get_rect(bottomright=(randint(900,1100),yPos))

def main():
    # pygame setup
    pygame.init()
    screen = pygame.display.set_mode((1200, 720))
    clock = pygame.time.Clock()
    
    #tower Surface and Rect
    towerSurface = pygame.image.load(os.path.join(scriptDir,"graphics/Tower","sprite_Tower0.png")).convert_alpha()
    towerSurface = pygame.transform.scale_by(towerSurface,.7)
    towerRect = towerSurface.get_rect(midbottom=(200,500))
    
    
    #Surfaces for ground and sky
    skySurface = pygame.image.load(os.path.join(scriptDir,"graphics","sky.png")).convert()
    groundSurface = pygame.image.load(os.path.join(scriptDir,"graphics","grass.png")).convert()
    largeSky=pygame.transform.scale2x(skySurface)
    largeGround=pygame.transform.scale_by(groundSurface,4)
    
    while True:
        # poll for events
        # pygame.QUIT event means the user clicked X to close your window
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                exit()
                
        #background Surfaces
        screen.blit(largeSky,(0,0))
        screen.blit(largeGround,(0,475))
        
        screen.blit(towerSurface,towerRect)

    # fill the screen with a color to wipe away anything from last frame

    # RENDER YOUR GAME HERE

    # flip() the display to put your work on screen
        pygame.display.flip()

        clock.tick(60)  # limits FPS to 60

if __name__ == "__main__":
    main()
    
